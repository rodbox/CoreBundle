services:
    rb.alert:
        class: RB\CoreBundle\Services\RBAlertService
        arguments: ["@service_container","@doctrine"]
    rb.scan:
        class: RB\CoreBundle\Services\RBScanService
        arguments: ["@service_container"]
    rb.file:
        class: RB\CoreBundle\Services\RBFileService
        arguments: ["@service_container","@twig"]
    rb.templates:
        class: RB\CoreBundle\Services\RBTemplatesService
        arguments: ["@service_container"]
    rb.upload:
        class: RB\CoreBundle\Services\RBUploadService
        arguments: ["@service_container"]

    rb.helper.service:
        class: RB\CoreBundle\Services\RBHelperService
        arguments: ["@service_container","@twig"]

    rb.counter:
        class: RB\CoreBundle\Services\RBCounterService
        arguments: ["@service_container"]

    rb.mustache:
        class: RB\CoreBundle\Services\RBMustacheService
        arguments: ["@service_container"]

    rb.editor:
        class: RB\CoreBundle\Services\RBEditorService
        arguments: ["@service_container","@twig"]

    rb.image:
        class: RB\CoreBundle\Services\RBImageService
        arguments: ["@service_container","@twig"]

    rb.curl:
        class: RB\CoreBundle\Services\RBCurlService
        arguments: ["@service_container"]

    rb.helper.extension:
        class: RB\CoreBundle\Twig\RBHelperExtension
        arguments: ["@service_container","@twig"]
        tags:
            - { name: twig.extension }
    rb.core.extension:
        class: RB\CoreBundle\Twig\RBCoreExtension
        arguments: ["@service_container","@twig","@session","@router","@doctrine"]
        tags:
            - { name: twig.extension }

    rb.pdf.extension:
        class: RB\CoreBundle\Twig\RBPdfExtension
        arguments: ["@service_container","@twig","@session","@router"]
        tags:
            - { name: twig.extension }

    rb.crud.extension:
        class: RB\CoreBundle\Twig\RBCrudExtension
        arguments: ["@service_container","@twig"]
        tags:
            - { name: twig.extension }

    rb.upload.extension:
        class: RB\CoreBundle\Twig\RBUploadExtension
        arguments: ["@service_container","@twig"]
        tags:
            - { name: twig.extension }

    rb.proto.extension:
        class: RB\CoreBundle\Twig\RBProtoExtension
        arguments: ["@service_container","@twig"]
        tags:
            - { name: twig.extension }

    rb.bootstrap.extension:
        class: RB\CoreBundle\Twig\RBBootstrapExtension
        arguments: ["@service_container","@twig"]
        tags:
            - { name: twig.extension }

    rb.explorer.extension:
        class: RB\CoreBundle\Twig\RBExplorerExtension
        arguments: ["@service_container","@twig"]
        tags:
            - { name: twig.extension }

    gedmo.listener.blameable:
        class: Gedmo\Blameable\BlameableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.tree:
        class: Gedmo\Tree\TreeListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.translatable:
        class: Gedmo\Translatable\TranslatableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]
            - [ setDefaultLocale, [ %locale% ] ]
            - [ setTranslationFallback, [ false ] ]

    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.sortable:
        class: Gedmo\Sortable\SortableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.loggable:
        class: Gedmo\Loggable\LoggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.softdeleteable:
        class: Gedmo\SoftDeleteable\SoftDeleteableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]